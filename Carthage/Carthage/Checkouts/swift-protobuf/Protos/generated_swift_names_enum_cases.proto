// See Makefile for the logic that generates this
// Protoc errors imply this file is being generated incorrectly
// Swift compile errors are probably bugs in protoc-gen-swift
syntax = "proto3";
package protobuf_unittest;
enum GeneratedSwiftReservedEnum {
  NONE = 0;
  a = 1;
  adjusted = 2;
  any = 3;
  AnyExtensionField = 4;
  AnyMessageExtension = 5;
  AnyMessageStorage = 6;
  Api = 7;
  appended = 8;
  appendUIntHex = 9;
  appendUnknown = 10;
  are = 11;
  areAllInitialized = 12;
  array = 13;
  arrayLiteral = 14;
  arraySeparator = 15;
  as = 16;
  asciiOpenCurlyBracket = 17;
  asciiZero = 18;
  asJSONObject = 19;
  available = 20;
  b = 21;
  BaseType = 22;
  because = 23;
  binary = 24;
  BinaryDecoder = 25;
  BinaryEncoder = 26;
  BinaryEncodingSizeVisitor = 27;
  BinaryEncodingVisitor = 28;
  body = 29;
  bodySize = 30;
  Bool = 31;
  booleanLiteral = 32;
  BooleanLiteralType = 33;
  boolValue = 34;
  buffer = 35;
  buildTypeURL = 36;
  by = 37;
  bytes = 38;
  bytesInGroup = 39;
  BytesValue = 40;
  c = 41;
  capitalizeNext = 42;
  cardinality = 43;
  Character = 44;
  characters = 45;
  chars = 46;
  clearExtensionValue = 47;
  clearSourceContext = 48;
  clearValue = 49;
  Collection = 50;
  consume = 51;
  contentJSON = 52;
  contentsOf = 53;
  count = 54;
  current = 55;
  customCodable = 56;
  d = 57;
  Data = 58;
  dataPointer = 59;
  dataResult = 60;
  dataSize = 61;
  date = 62;
  daySec = 63;
  daysSinceEpoch = 64;
  DD = 65;
  debugDescription = 66;
  decoded = 67;
  decodedFromJSONNull = 68;
  decodeExtensionField = 69;
  decodeJSON = 70;
  decodeMapField = 71;
  decodeMessage = 72;
  decoder = 73;
  decodeRepeated = 74;
  decodeRepeatedBoolField = 75;
  decodeRepeatedBytesField = 76;
  decodeRepeatedDoubleField = 77;
  decodeRepeatedEnumField = 78;
  decodeRepeatedFixed32Field = 79;
  decodeRepeatedFixed64Field = 80;
  decodeRepeatedFloatField = 81;
  decodeRepeatedGroupField = 82;
  decodeRepeatedInt32Field = 83;
  decodeRepeatedInt64Field = 84;
  decodeRepeatedMessageField = 85;
  decodeRepeatedSFixed32Field = 86;
  decodeRepeatedSFixed64Field = 87;
  decodeRepeatedSInt32Field = 88;
  decodeRepeatedSInt64Field = 89;
  decodeRepeatedStringField = 90;
  decodeRepeatedUInt32Field = 91;
  decodeRepeatedUInt64Field = 92;
  decodeSingular = 93;
  decodeSingularBoolField = 94;
  decodeSingularBytesField = 95;
  decodeSingularDoubleField = 96;
  decodeSingularEnumField = 97;
  decodeSingularFixed32Field = 98;
  decodeSingularFixed64Field = 99;
  decodeSingularFloatField = 100;
  decodeSingularGroupField = 101;
  decodeSingularInt32Field = 102;
  decodeSingularInt64Field = 103;
  decodeSingularMessageField = 104;
  decodeSingularSFixed32Field = 105;
  decodeSingularSFixed64Field = 106;
  decodeSingularSInt32Field = 107;
  decodeSingularSInt64Field = 108;
  decodeSingularStringField = 109;
  decodeSingularUInt32Field = 110;
  decodeSingularUInt64Field = 111;
  decodeString = 112;
  decodeTextFormat = 113;
  defaultInstance = 114;
  defaultValue = 115;
  description = 116;
  destination = 117;
  Dictionary = 118;
  dictionaryLiteral = 119;
  digit = 120;
  digit0 = 121;
  digit1 = 122;
  digitCount = 123;
  digits = 124;
  digitValue = 125;
  discardableResult = 126;
  DispatchQueue = 127;
  div = 128;
  double = 129;
  doubleToUtf8 = 130;
  DoubleValue = 131;
  Duration = 132;
  E = 133;
  Element = 134;
  elements = 135;
  emitExtensionFieldName = 136;
  emitFieldName = 137;
  emitFieldNumber = 138;
  emitVerboseTextForm = 139;
  Empty = 140;
  emptyData = 141;
  encoded = 142;
  encodedJSONString = 143;
  encodedSize = 144;
  encodeField = 145;
  encoder = 146;
  end = 147;
  endArray = 148;
  endMessageField = 149;
  endObject = 150;
  endRegularField = 151;
  Enum = 152;
  enumvalue = 153;
  Equatable = 154;
  ext = 155;
  extendedGraphemeClusterLiteral = 156;
  ExtendedGraphemeClusterLiteralType = 157;
  ExtensionFieldValueSet = 158;
  ExtensionMap = 159;
  extensions = 160;
  extras = 161;
  f = 162;
  false = 163;
  fastUtf8ToString = 164;
  field = 165;
  FieldMask = 166;
  fieldName = 167;
  fieldNameCount = 168;
  fieldNum = 169;
  fieldNumber = 170;
  fieldNumberForProto = 171;
  fields = 172;
  fieldSize = 173;
  FieldTag = 174;
  fieldType = 175;
  fieldValue = 176;
  fileName = 177;
  fileprivate = 178;
  firstItem = 179;
  flatMap = 180;
  float = 181;
  floatLiteral = 182;
  FloatLiteralType = 183;
  floatToUtf8 = 184;
  FloatValue = 185;
  for = 186;
  formatDuration = 187;
  formatTimestamp = 188;
  forMessage = 189;
  forMessageName = 190;
  forReadingFrom = 191;
  forTypeURL = 192;
  forWritingInto = 193;
  from = 194;
  fromAscii2 = 195;
  fromAscii4 = 196;
  fromHexDigit = 197;
  fromMessage = 198;
  fromURL = 199;
  func = 200;
  Functions = 201;
  G = 202;
  generated = 203;
  get = 204;
  getExtensionValue = 205;
  Google_Protobuf_Any = 206;
  Google_Protobuf_Api = 207;
  Google_Protobuf_BoolValue = 208;
  Google_Protobuf_BytesValue = 209;
  Google_Protobuf_DoubleValue = 210;
  Google_Protobuf_Duration = 211;
  Google_Protobuf_Empty = 212;
  Google_Protobuf_Enum = 213;
  Google_Protobuf_EnumValue = 214;
  Google_Protobuf_Field = 215;
  Google_Protobuf_FieldMask = 216;
  Google_Protobuf_FloatValue = 217;
  Google_Protobuf_Int32Value = 218;
  Google_Protobuf_Int64Value = 219;
  Google_Protobuf_ListValue = 220;
  Google_Protobuf_Method = 221;
  Google_Protobuf_Mixin = 222;
  Google_Protobuf_NullValue = 223;
  Google_Protobuf_Option = 224;
  Google_Protobuf_SourceContext = 225;
  Google_Protobuf_StringValue = 226;
  Google_Protobuf_Struct = 227;
  Google_Protobuf_Syntax = 228;
  Google_Protobuf_Timestamp = 229;
  Google_Protobuf_Type = 230;
  Google_Protobuf_UInt32Value = 231;
  Google_Protobuf_UInt64Value = 232;
  Google_Protobuf_Value = 233;
  gregorianDateFromSecondsSince1970 = 234;
  group = 235;
  h = 236;
  handleConflictingOneOf = 237;
  has = 238;
  hasExtensionValue = 239;
  hash = 240;
  Hashable = 241;
  hashValue = 242;
  HashVisitor = 243;
  hasSourceContext = 244;
  hasValue = 245;
  hh = 246;
  hour = 247;
  i = 248;
  in = 249;
  index = 250;
  init = 251;
  inout = 252;
  insert = 253;
  insertIntoSet = 254;
  Int = 255;
  Int32 = 256;
  Int32Value = 257;
  Int64 = 258;
  Int64Value = 259;
  Int8 = 260;
  integerLiteral = 261;
  IntegerLiteralType = 262;
  intern = 263;
  Internal = 264;
  InternalState = 265;
  isA = 266;
  isEqual = 267;
  isEqualTo = 268;
  isInitialized = 269;
  it = 270;
  Iterator = 271;
  i_2166136261 = 272;
  json = 273;
  JSONDecoder = 274;
  jsonEncoder = 275;
  JSONEncodingVisitor = 276;
  JSONMapEncodingVisitor = 277;
  jsonName = 278;
  jsonPath = 279;
  jsonPaths = 280;
  JSONScanner = 281;
  jsonString = 282;
  jsonText = 283;
  JSONToProto = 284;
  jsonUTF8Data = 285;
  julianDayNumberFromSecondsSince1970 = 286;
  k = 287;
  Key = 288;
  keyField = 289;
  KeyType = 290;
  kind = 291;
  knownTypes = 292;
  l = 293;
  label = 294;
  length = 295;
  let = 296;
  lhs = 297;
  listOfMessages = 298;
  listValue = 299;
  littleEndian = 300;
  littleEndianBytes = 301;
  M = 302;
  major = 303;
  makeIterator = 304;
  mapHash = 305;
  mapNameResolver = 306;
  mapToMessages = 307;
  MapValueType = 308;
  mapVisitor = 309;
  mdayStart = 310;
  members = 311;
  merge = 312;
  message = 313;
  messageDepthLimit = 314;
  MessageExtension = 315;
  messageType = 316;
  Method = 317;
  methods = 318;
  minor = 319;
  Mixin = 320;
  mixins = 321;
  mm = 322;
  mod = 323;
  month = 324;
  mutating = 325;
  n = 326;
  name = 327;
  NameDescription = 328;
  NameMap = 329;
  nameResolver = 330;
  names = 331;
  nanos = 332;
  nativeBytes = 333;
  nativeEndianBytes = 334;
  newL = 335;
  newValue = 336;
  nextFieldNumber = 337;
  nil = 338;
  nilLiteral = 339;
  no = 340;
  normalizeForDuration = 341;
  normalizeForTimestamp = 342;
  nullValue = 343;
  number = 344;
  numberValue = 345;
  of = 346;
  oneofIndex = 347;
  oneofs = 348;
  OneOf_Kind = 349;
  only = 350;
  Option = 351;
  OptionalEnumExtensionField = 352;
  OptionalExtensionField = 353;
  OptionalGroupExtensionField = 354;
  OptionalMessageExtensionField = 355;
  options = 356;
  org = 357;
  other = 358;
  out = 359;
  output = 360;
  p = 361;
  packed = 362;
  PackedEnumExtensionField = 363;
  PackedExtensionField = 364;
  packedSize = 365;
  padding = 366;
  parseBareFloatString = 367;
  parseBareSInt = 368;
  parseBareUInt = 369;
  parseBytes = 370;
  parseDuration = 371;
  parseJSONFieldNames = 372;
  parseTimestamp = 373;
  partial = 374;
  path = 375;
  paths = 376;
  pointer = 377;
  pos = 378;
  prefix = 379;
  preTraverse = 380;
  private = 381;
  proto = 382;
  proto2 = 383;
  proto3DefaultValue = 384;
  protobuf = 385;
  ProtobufBool = 386;
  ProtobufBytes = 387;
  ProtobufDouble = 388;
  ProtobufEnumMap = 389;
  protobufExtension = 390;
  ProtobufFloat = 391;
  ProtobufInt32 = 392;
  ProtobufInt64 = 393;
  ProtobufMap = 394;
  ProtobufMessageMap = 395;
  ProtobufString = 396;
  ProtobufUInt32 = 397;
  ProtobufUInt64 = 398;
  protobuf_extensionFieldValues = 399;
  protobuf_fieldNumber = 400;
  protobuf_generated_isEqualTo = 401;
  protobuf_nameMap = 402;
  protobuf_newField = 403;
  protobuf_package = 404;
  protoFieldName = 405;
  protoMessageName = 406;
  protoPaths = 407;
  ProtoToJSON = 408;
  public = 409;
  putBoolValue = 410;
  putBytesValue = 411;
  putDoubleValue = 412;
  putEnumValue = 413;
  putFixedUInt32 = 414;
  putFixedUInt64 = 415;
  putFloatValue = 416;
  putInt64 = 417;
  putStringValue = 418;
  putUInt64 = 419;
  putUInt64Hex = 420;
  putVarInt = 421;
  putZigZagVarInt = 422;
  rawChars = 423;
  RawValue = 424;
  register = 425;
  RepeatedEnumExtensionField = 426;
  RepeatedExtensionField = 427;
  RepeatedGroupExtensionField = 428;
  RepeatedMessageExtensionField = 429;
  requestStreaming = 430;
  requestTypeURL = 431;
  requiredSize = 432;
  responseStreaming = 433;
  responseTypeURL = 434;
  result = 435;
  return = 436;
  revision = 437;
  rhs = 438;
  root = 439;
  s = 440;
  sawBackslash = 441;
  scanner = 442;
  seconds = 443;
  self = 444;
  separator = 445;
  serializeAnyJSON = 446;
  serializedData = 447;
  serializedSize = 448;
  serialQueue = 449;
  set = 450;
  setExtensionValue = 451;
  shift = 452;
  SignedInteger = 453;
  SimpleExtensionMap = 454;
  sizer = 455;
  slowUtf8ToString = 456;
  source = 457;
  sourceContext = 458;
  split = 459;
  ss = 460;
  start = 461;
  startArray = 462;
  startField = 463;
  startIndex = 464;
  startMessageField = 465;
  startObject = 466;
  startRegularField = 467;
  state = 468;
  static = 469;
  StaticString = 470;
  storage = 471;
  StorageClass = 472;
  String = 473;
  stringLiteral = 474;
  StringLiteralType = 475;
  stringResult = 476;
  stringValue = 477;
  Struct = 478;
  structValue = 479;
  subDecoder = 480;
  subscript = 481;
  swift = 482;
  SwiftProtobuf = 483;
  syntax = 484;
  T = 485;
  tag = 486;
  target = 487;
  terminator = 488;
  testDecoder = 489;
  text = 490;
  textDecoder = 491;
  TextFormatDecoder = 492;
  TextFormatEncoder = 493;
  TextFormatEncodingVisitor = 494;
  TextFormatScanner = 495;
  textFormatString = 496;
  that = 497;
  they = 498;
  throws = 499;
  timeInterval = 500;
  timeIntervalSince1970 = 501;
  timeIntervalSinceReferenceDate = 502;
  timeOfDayFromSecondsSince1970 = 503;
  Timestamp = 504;
  toJsonFieldName = 505;
  total = 506;
  traverse = 507;
  true = 508;
  try = 509;
  type = 510;
  typealias = 511;
  typeName = 512;
  typePrefix = 513;
  typeRegistry = 514;
  typeStart = 515;
  typeUnknown = 516;
  typeURL = 517;
  UInt32 = 518;
  UInt32Value = 519;
  UInt64 = 520;
  UInt64Value = 521;
  UInt8 = 522;
  UnicodeScalar = 523;
  unicodeScalarLiteral = 524;
  UnicodeScalarLiteralType = 525;
  unicodeScalars = 526;
  UnicodeScalarView = 527;
  union = 528;
  uniqueStorage = 529;
  unknown = 530;
  unknownData = 531;
  unknownFields = 532;
  UnknownStorage = 533;
  unpack = 534;
  unpackTo = 535;
  UnsafeBufferPointer = 536;
  UnsafeMutablePointer = 537;
  UnsafeMutableRawBufferPointer = 538;
  UnsafePointer = 539;
  updatedOptions = 540;
  url = 541;
  used = 542;
  utf8 = 543;
  utf8Buffer = 544;
  utf8Codec = 545;
  utf8ToDouble = 546;
  utf8ToString = 547;
  UTF8View = 548;
  v = 549;
  value = 550;
  valueField = 551;
  values = 552;
  ValueType = 553;
  var = 554;
  version = 555;
  versionString = 556;
  visitExtensionFields = 557;
  visitMapField = 558;
  visitor = 559;
  visitPacked = 560;
  visitPackedBoolField = 561;
  visitPackedDoubleField = 562;
  visitPackedEnumField = 563;
  visitPackedFixed32Field = 564;
  visitPackedFixed64Field = 565;
  visitPackedFloatField = 566;
  visitPackedInt32Field = 567;
  visitPackedInt64Field = 568;
  visitPackedSFixed32Field = 569;
  visitPackedSFixed64Field = 570;
  visitPackedSInt32Field = 571;
  visitPackedSInt64Field = 572;
  visitPackedUInt32Field = 573;
  visitPackedUInt64Field = 574;
  visitRepeated = 575;
  visitRepeatedBoolField = 576;
  visitRepeatedBytesField = 577;
  visitRepeatedDoubleField = 578;
  visitRepeatedEnumField = 579;
  visitRepeatedFixed32Field = 580;
  visitRepeatedFixed64Field = 581;
  visitRepeatedFloatField = 582;
  visitRepeatedGroupField = 583;
  visitRepeatedInt32Field = 584;
  visitRepeatedInt64Field = 585;
  visitRepeatedMessageField = 586;
  visitRepeatedSFixed32Field = 587;
  visitRepeatedSFixed64Field = 588;
  visitRepeatedSInt32Field = 589;
  visitRepeatedSInt64Field = 590;
  visitRepeatedStringField = 591;
  visitRepeatedUInt32Field = 592;
  visitRepeatedUInt64Field = 593;
  visitSingular = 594;
  visitSingularBoolField = 595;
  visitSingularBytesField = 596;
  visitSingularDoubleField = 597;
  visitSingularEnumField = 598;
  visitSingularFixed32Field = 599;
  visitSingularFixed64Field = 600;
  visitSingularFloatField = 601;
  visitSingularGroupField = 602;
  visitSingularInt32Field = 603;
  visitSingularInt64Field = 604;
  visitSingularMessageField = 605;
  visitSingularSFixed32Field = 606;
  visitSingularSFixed64Field = 607;
  visitSingularSInt32Field = 608;
  visitSingularSInt64Field = 609;
  visitSingularStringField = 610;
  visitSingularUInt32Field = 611;
  visitSingularUInt64Field = 612;
  visitUnknown = 613;
  where = 614;
  wireFormat = 615;
  with = 616;
  WrappedType = 617;
  wrapped_vsnprintf = 618;
  yday = 619;
  YY = 620;
}
